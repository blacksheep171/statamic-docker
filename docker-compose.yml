version: '3'
services:
  webserver:
    image: "nginx:1.18.0"
    container_name: terrace-webserver
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - "./env/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./env/nginx/conf.d:/etc/nginx/conf.d"
    working_dir: /var/www
    depends_on:
      - php
    networks:
      - terrace
    expose:
      - "9000"
  php:
    image: terrace/php:8.1-fpm
    container_name: terrace-php
    build: 
      context: .
      dockerfile: Dockerfile
    tty: true
    volumes:
      - .:/var/www
      - ./env/php/php-fpm.d/:/usr/local/etc/php-fpm.d/
      - "./env/php/custom.ini:/usr/local/etc/php/custom.ini"
    working_dir: /var/www
    # entrypoint: [ "bash", "-c", "/start.sh"]
    expose:
      - 9000
    # depends_on:
    #  - mysql
    links: 
      - mysql
    networks:
      - terrace
  mysql:
    image: "mysql:5.7"
    container_name: terrace-mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
     - "3360:3006"
    volumes:
     - ./mysql:/var/lib/mysql
     - "./backups/init:/docker-entrypoint-initdb.d"
    networks:
     - terrace
  elasticsearch:
    image: elasticsearch:7.17.8
    container_name: terrace-elasticsearch
    # environment:
    #   - xpack.security.enabled=false
    #   - discovery.type=single-node
    env_file:
      - ./env/elasticsearch.env
    volumes:
      - ./env/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - terrace
  redis:
    image: redis:6.2
    # build: ./env/redis
    container_name: terrace-redis
    tty: true
    ports:
      - "6378:6379"
    volumes:
      # - ./env/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/data
    networks:
      - terrace
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: terrace-phpmyadmin
    restart: always
    ports:
     - "81:80"
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
     - terrace
volumes:
  mysql:
networks:
  terrace:
